## Command history configuration
if [ -z "$HISTFILE"  ]; then
    HISTFILE=$HOME/.zsh_history
fi

HISTSIZE=10000
SAVEHIST=10000

# Show history
case $HIST_STAMPS in
  "mm/dd/yyyy") alias history='fc -fl 1' ;;
  "dd.mm.yyyy") alias history='fc -El 1' ;;
  "yyyy-mm-dd") alias history='fc -il 1' ;;
  *) alias history='fc -l 1'
esac

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups # ignore duplication command history list
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt share_history # share command history data

# set vi keybindings for commandline
# bindkey -v

# load env variables
export LESS="-XFR"
export USE_GKE_GCLOUD_AUTH_PLUGIN=True # required for kubectl auth updates
export FZF_DEFAULT_COMMAND='rg' # make fzf use rg by default
export CLOUDSDK_PYTHON="/usr/local/bin/python3.9"
# export ANSIBLE_VAULT_PASSWORD_FILE=~/.vault-pass.txt
# export ANSIBLE_HOST_KEY_CHECKING=False
# export GOPATH=/Users/robertjones/Code/go

# Set zsh completions in fpath
#fpath=(~/dotfiles/zsh/completion $fpath)

# aliases
alias tree='tree -C -I "*~|*#|node_modules|sprockets" && echo "Performing tree recursively, without node modules"'
alias brewup="brew update && brew upgrade && brew cleanup"
alias gs='git status'
alias gp='git pull'
alias ga='git add'
alias gd='git diff'
alias gcm='git commit -m'
alias gc='git commit'
alias zp='vim ~/.zshrc'
alias zpr='source ~/.zshrc'
alias goto='git checkout'
alias k='kubectl'
alias kcx='kubectx'
alias mk='minikube'
alias pn='pnpm'
alias tn='tmux new -f'

# required for Z installation
. `brew --prefix`/etc/profile.d/z.sh

# plugins
export ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh
source $(brew --prefix nvm)/nvm.sh

zplug 'mafredri/zsh-async', from:"github", at:"main", use:"async.zsh"
zplug 'sindresorhus/pure', use:pure.zsh, at:"main", from:github, as:theme
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-syntax-highlighting"
zplug "docker/compose", use:contrib/completion/zsh
# zplug "adc17/pure-red-stars", as:theme


# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
  printf "Install [y/N]: "
  if read -q; then
      echo; zplug install
  fi
 fi
zplug load --verbose

# Plugins
source ~/dotfiles/zsh/zsh-functions.zsh
source ~/dotfiles/zsh/omz-git.zsh # loads git integration, stolen from omz
source ~/.iterm2_shell_integration.zsh
source <(kubectl completion zsh)
RPROMPT='$(kubectx_prompt)'

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Java version management
export JAVA_HOME=`/usr/libexec/java_home -v 11`

# Color settings
# makes color constants available
autoload -Uz compinit && compinit #for install of zsh-completions package
autoload -U colors
colors

# enable coloured output from ls, etc on FreeBSD-based systems
export CLICOLOR=1

- [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh 

# Source sensitive env var
source ~/env_var/env-vars.zsh

# source bash_profile
# source ~/.bash_profile

# >>> scala-cli completions >>>
fpath=(
  "/Users/robjones/Library/Application Support/ScalaCli/completions/zsh"
  ~/dotfiles/zsh/completion
  $fpath
)
compinit

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/robjones/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/robjones/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/robjones/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/robjones/google-cloud-sdk/completion.zsh.inc'; fi
autoload -U compinit; compinit
